server {
    server_name application;
    root /opt/webapp/public;
    listen 8660;
    index index.php;
    # Normal flow
    location / {
        # try to serve file directly, fallback to app.php
        # Symfony
        try_files $uri $uri/ /index.php$is_args$args;
        # Laravel
        # try_files $uri $uri/ /index.php$query_string;
    }
    server_tokens off;
    add_header X-Frame-Options deny;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    #add_header Content-Security-Policy-Report-Only "default-src 'self'; script-src 'self' 'unsafe-inline' *.unbounce.com *.cloudfront.net ajax.googleapis.com script.crazyegg.com  https://www.googletagmanager.com *.google-analytics.com *.usabilla.com w.usabilla.com *.cloudfront.net; img-src 'self' 'unsafe-inline' *.cloudfront.net *.unbounce.com data:; style-src 'self' 'unsafe-inline' *.unbounce.com fonts.googleapis.com; font-src 'self' fonts.gstatic.com; object-src 'none'";
    client_max_body_size 512M;
    # DEV
    # This rule should only be placed on your development environment
    # In production, don't include this and don't deploy app_dev.php or config.php
    location ~ ^/(index)\.php(/|$) {
        fastcgi_pass dokkie_php_fpm:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/app.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }
    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }
    error_log /var/log/nginx/access.log;
    access_log /var/log/nginx/error.log;
}
